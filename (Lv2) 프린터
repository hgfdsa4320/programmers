/**
 * 문제 출처: 프로그래머스 코딩 테스트 연습, https://programmers.co.kr/learn/challenges
 */

import java.util.*;

class Solution {
    public int solution(int[] priorities, int location) {
        int answer = 0;
        Queue<Integer> indexQ = new LinkedList<>(); // index만 넣는 큐
        Queue<Integer> priorityQ = new LinkedList<>(); // 중요도만 넣는 큐
        for(int i=0;i<priorities.length;i++){
            indexQ.offer(i);
            priorityQ.offer(priorities[i]);
        }
        
        int n=1;
        while(!indexQ.isEmpty()){
            int index = indexQ.poll();
            int p = priorityQ.poll();
            if(indexQ.isEmpty()){ //마지막
                return n;
            }else if(p>=priorityQ.stream().max((a,b)->a-b).get()){ //현재 문서가 가장 중요도가 높을 때
                if(index==location){
                    return n;
                }
                n++;
            }else{ // 더 중요도가 높은 문서가 뒤에 있을 때
                indexQ.offer(index);
                priorityQ.offer(p);
            }
        }
        
        return answer;
    }
}
